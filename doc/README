=head1 PAUSE repository

This repository lives at

    http://pause.perl.org:5459/svn/pause/trunk
    (for writers: https://pause.perl.org:5460/svn/pause/trunk)

and is considered to contain all relevant programs and configuration
data for running pause.perl.org except for the SSL key and certificate
and files containing passwords or other sensible data. To access the
repository you need a subversion client (subversion.tigris.org).

If you do not have a subversion client, a tarball of the repository is
produced by a cronjob and accessible in the directory

    ftp://pause.perl.org/pub/PAUSE/PAUSE-code/

The filenames of the snapshots in that directory match
C< /^pause-wc-(\d+)\.tar\.gz$/ > where C< $1 > is the revision number of
the repository.

=head2 Excluded files

The following file has been excluded from the repository for obvious
reasons:

    privatelib/PrivatePAUSE.pm

PrivatePAUSE.pm contains only the usernames and passwords of the mysql
users that own the two databases. See below for "Database schema".

Other sensitive files, like the SSL key of the server, password files,
sshd_config need to be maintained separately from the repository. See
below the section about user management.

=head2 File system layout

On PAUSE most config files live in /home/k/PAUSE. Where files are
needed elsewhere in the filesystem, we used to use symlinks. Cfengine
was chosen to maintain the symlinks during the hardware upgrade in
March 2006, so all the symlinks needed are now listed in the
etc/cfengine directory.

[ MISSING documentation:

  /etc/cron.jobs/indexscripts.pl    -> ../../home/kstar/cron/indexscripts.pl
  /etc/security/limits.conf         -> ../../home/k/PAUSE/etc/security/limits.conf

]

(XXX integrate indexscripts.pl with the help of kstar)

=head2 External programs needed to run PAUSE

  apache with mod_perl and Apache-SSL
  perl
  mirror (the good old one)
  mon
  proftpd
  mysqld
  rsync (runs as daemon)
  subversion (optional)
  gpg
  unzip

At the time of this writing (2006), all perl scripts were running
under 5.8.7.

=head2 Database schema

The files doc/*.schema.txt document the schema of the two databases. A
dump of the mod database is produced every few hours and available for
download in the ftp area. A dump of the authen_pause database is -- of
course -- not available.

=head2 User management

This section is about the fun of makeing mysql safe based on UNIX user
and group permissions. This is dangerous stuff. Be careful here and
follow the advice in the mysql manual about how to secure mysql in
general.

User "nobody" runs the web server.

PAUSE is running processes as user root, nobody, SVN, ftp, and UNSAFE.
The user "k" in the group "k" owns the working copy of the repository
and all the sensitive files. Group "k" must contain all users who
should be able to read sensitive data. So at least "nobody" (who runs
the webserver) must be in that group. Sensitive directories and files
must be group-readable and must not be world readable. The SSL data
for the webservers should not even be readable by that group, only by
root who starts the webservers.

This setup must ensure that the user UNSAFE cannot read the database
account informations. On the database side this is achieved by
granting the privileges on the two tables, nothing else, to one user.
The grant statement looks something like

  grant delete,index,insert,select,update,lock tables on mod.* to \
        'xxx'@'yyy' identified by 'zzz';

For replication, three additional privileges are needed: "reload,
super, replication client".

As an experimental feature we allowed replication to the world with

  grant replication slave on *.* to repl@'%' identified by 'perl';

This is the user whose access codes are stored in PrivatePAUSE.pm. The
root password to mysql is not needed by any script, so can be stored
offline.

=head2 Other security considerations

We practice security by visibility by giving the users as much
information as possible about the status of their requests. This is
mostly done by sending them mail about every action they take.

Another important axiom is that we disallow overwriting of files
except for pure documentation files. That way the whole CPAN cannot
fall out of sync and inconsistencies can be tracked easily. It opens
us the possibility to maintain a I<backpan>, a backup of all relevant
files of all times. Any attempt to upload malicious code can thus be
tracked much better.

=head2 Missing pieces

As always, there are things we didn't bother to integrate into the
repository because they are so basic stuff for any UNIX machine:

  logrotate
  xntpd
  sendmail

and probably more. If you discover pieces that are important but
missing in the repository or documentation, please let us know.

=cut
