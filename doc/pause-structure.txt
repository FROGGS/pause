From: koenig@kulturbox.de (Andreas J. Koenig)
Subject: Re: Scripts: update
To: kstar@chapin.edu
Cc: scripts@perl.org,
	  Randy Kobes <randy@theory.uwinnipeg.ca>
Date: 11 Jun 1998 06:54:50 +0200
X-From-Line: nobody Thu Jun 11 06:54:51 1998
Sender: k@dubravka.in-berlin.de
References: <19980527183813.A18280@O2.chapin.edu> <sfcd8cxtmno.fsf@dubravka.in-berlin.de> <19980610213556.Q24374@O2.chapin.edu>
In-Reply-To: kstar@chapin.edu's message of "Wed, 10 Jun 1998 21:35:56 -0400"
Message-ID: <sfclnr48rmt.fsf@dubravka.in-berlin.de>
X-Mailer: Gnus v5.6.4/Emacs 20.2
Lines: 74
Xref: dubravka.in-berlin.de sent:704
X-Gnus-Article-Number: 704   Thu Jun 11 06:54:51 1998

>>>>> On Wed, 10 Jun 1998 21:35:56 -0400, kstar@chapin.edu said:

>> I believe we should provide more primitive means to add metadata. A
>> Web interface is nice, but I'd prefer to have files in the first
>> place, and the Web interface should only reflect what can otherwise be
>> done with files too. Consider the WWW interface the frontend that
>> writes a file. Consider the Real Hacker who feeds his file to the
>> Webpage with a smallish LWP program. Wouldn't it make more sense to
>> give him a smallish perl script that writes the file to his disk and
>> includes it in the .tar.gz file?

kstar>     I agree.  In fact, that sounds like an excellent candidate
kstar> for The First New Script on CPAN.

:-)

>> There must be a way to indicate $VERSION. How?

kstar>     Just put `$VERSION=xxx' somewhere in your script, and
kstar> CPAN.pm will pick it up (via ExtUtils::MakeMaker).

No, that's also something that TheFirstNewScript must deal with. You
can't expect that a program identifies the script within a .tar.gz
file without a hint. For modules it's easier, I look into all .pm
files, and had enough troubles with the exceptions where folks wanted
to write a .pm file during Makefile.PL execution. For obvious reasons
I cannot run Makefile.PL on the upload server.

kstar>     Andreas, I tried poking around PAUSE, but I wasn't really
kstar> sure where to look for all the scripts.  Can you please point me
kstar> to the proper directories?

Sorry, did I really not give you a hint, very sorry.

~k/PAUSE/
    apache-conf/       Apache Configuration
    apache-perl/
        user/          User CGI scripts (mod_perl to be precise)
        admin/         Admin CGI scripts (mod_perl to be precise)
    authen/            User Password
    bin/               scripts, mainly paused, the pause daemon
    cron/              cronjobs, mostly symlinked into /etc/cron.jobs
                       root's cronjob table is currently

	02 02 * * 7 /etc/cron.jobs/restart-httpd
	03 03,15 * * * /etc/cron.jobs/msql-dump.sh
	17 4 * * * /etc/cron.jobs/cron-daily.pl
	22 1,5,9,13,17,21 * * * /etc/cron.jobs/mldistwatch
	30 * * * * /etc/cron.jobs/rm_stale_links
	31 * * * * /etc/cron.jobs/gmls-lR.pl
	37 * * * * /etc/cron.jobs/sync-franz-put.sh
	0-59/3 * * * * /etc/cron.jobs/diskwatch -m k / 75000 /M 150000
	53 0,6,12,18 * * * /etc/cron.jobs/run_mirrors.sh
	48 * * * * /usr/bin/perl /usr/local/mirror/mirror -p MICB /usr/local/mirror/mymirror.config > /dev/null

    doc/               :-/
    htdocs/            symlinked to Apache's document root
    lib/               PAUSE.pm and such
    log/               paused.log, the rather verbose output of paused
    man/               empty
    mirror/            mirror configuration, symlinked to /usr/local/mirror
    rc/                boot script
    src/               empty 

The two core scripts are bin/paused and cron/mldistwatch. Both would
need to be broken down into reusable and maintainable code.

PAUSE.pm was originally the pure configuration file, but now also
contains some frequently used routines.

LEt me know, what I missed to describe,

-- 
andreas
